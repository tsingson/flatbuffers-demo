// automatically generated by the FlatBuffers compiler, do not modify

package Serializer;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class StringList extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static StringList getRootAsStringList(ByteBuffer _bb) { return getRootAsStringList(_bb, new StringList()); }
  public static StringList getRootAsStringList(ByteBuffer _bb, StringList obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public StringList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String values(int j) { int o = __offset(4); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int valuesLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public StringVector valuesVector() { return valuesVector(new StringVector()); }
  public StringVector valuesVector(StringVector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createStringList(FlatBufferBuilder builder,
      int valuesOffset) {
    builder.startTable(1);
    StringList.addValues(builder, valuesOffset);
    return StringList.endStringList(builder);
  }

  public static void startStringList(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addValues(FlatBufferBuilder builder, int valuesOffset) { builder.addOffset(0, valuesOffset, 0); }
  public static int createValuesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startValuesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endStringList(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public StringList get(int j) { return get(new StringList(), j); }
    public StringList get(StringList obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

