// automatically generated by the FlatBuffers compiler, do not modify

package Serializer;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class MutationData extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static MutationData getRootAsMutationData(ByteBuffer _bb) { return getRootAsMutationData(_bb, new MutationData()); }
  public static MutationData getRootAsMutationData(ByteBuffer _bb, MutationData obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public MutationData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int removed(int j) { int o = __offset(4); return o != 0 ? bb.getInt(__vector(o) + j * 4) : 0; }
  public int removedLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public IntVector removedVector() { return removedVector(new IntVector()); }
  public IntVector removedVector(IntVector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer removedAsByteBuffer() { return __vector_as_bytebuffer(4, 4); }
  public ByteBuffer removedInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 4); }
  public StringList attributes(int j) { return attributes(new StringList(), j); }
  public StringList attributes(StringList obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int attributesLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public StringList.Vector attributesVector() { return attributesVector(new StringList.Vector()); }
  public StringList.Vector attributesVector(StringList.Vector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public StringList text(int j) { return text(new StringList(), j); }
  public StringList text(StringList obj, int j) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int textLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public StringList.Vector textVector() { return textVector(new StringList.Vector()); }
  public StringList.Vector textVector(StringList.Vector obj) { int o = __offset(8); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createMutationData(FlatBufferBuilder builder,
      int removedOffset,
      int attributesOffset,
      int textOffset) {
    builder.startTable(3);
    MutationData.addText(builder, textOffset);
    MutationData.addAttributes(builder, attributesOffset);
    MutationData.addRemoved(builder, removedOffset);
    return MutationData.endMutationData(builder);
  }

  public static void startMutationData(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addRemoved(FlatBufferBuilder builder, int removedOffset) { builder.addOffset(0, removedOffset, 0); }
  public static int createRemovedVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addInt(data[i]); return builder.endVector(); }
  public static void startRemovedVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addAttributes(FlatBufferBuilder builder, int attributesOffset) { builder.addOffset(1, attributesOffset, 0); }
  public static int createAttributesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startAttributesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addText(FlatBufferBuilder builder, int textOffset) { builder.addOffset(2, textOffset, 0); }
  public static int createTextVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startTextVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endMutationData(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public MutationData get(int j) { return get(new MutationData(), j); }
    public MutationData get(MutationData obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

